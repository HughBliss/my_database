// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DomainsColumns holds the columns for the "domains" table.
	DomainsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
		{Name: "name", Type: field.TypeString},
	}
	// DomainsTable holds the schema information for the "domains" table.
	DomainsTable = &schema.Table{
		Name:       "domains",
		Columns:    DomainsColumns,
		PrimaryKey: []*schema.Column{DomainsColumns[0]},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "permissions", Type: field.TypeJSON},
		{Name: "domain_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "roles_domains_roles",
				Columns:    []*schema.Column{RolesColumns[6]},
				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "current_domain_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_domains_active_users",
				Columns:    []*schema.Column{UsersColumns[6]},
				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserDomainsColumns holds the columns for the "user_domains" table.
	UserDomainsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
		{Name: "domain_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
		{Name: "role_id", Type: field.TypeString, SchemaType: map[string]string{"postgres": "char(20)"}},
	}
	// UserDomainsTable holds the schema information for the "user_domains" table.
	UserDomainsTable = &schema.Table{
		Name:       "user_domains",
		Columns:    UserDomainsColumns,
		PrimaryKey: []*schema.Column{UserDomainsColumns[1], UserDomainsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_domains_users_user",
				Columns:    []*schema.Column{UserDomainsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_domains_domains_domain",
				Columns:    []*schema.Column{UserDomainsColumns[1]},
				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_domains_roles_role",
				Columns:    []*schema.Column{UserDomainsColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DomainsTable,
		RolesTable,
		UsersTable,
		UserDomainsTable,
	}
)

func init() {
	RolesTable.ForeignKeys[0].RefTable = DomainsTable
	UsersTable.ForeignKeys[0].RefTable = DomainsTable
	UserDomainsTable.ForeignKeys[0].RefTable = UsersTable
	UserDomainsTable.ForeignKeys[1].RefTable = DomainsTable
	UserDomainsTable.ForeignKeys[2].RefTable = RolesTable
}
