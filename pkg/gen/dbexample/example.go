// Code generated by ent, DO NOT EDIT.

package dbexample

import (
	"fmt"
	"strings"
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/sql"
	"github.com/hughbliss/my_database/pkg/gen/dbexample/example"
	"github.com/rs/xid"
)

// Example is the model entity for the Example schema.
type Example struct {
	config `json:"-"`
	// ID of the ent.
	ID xid.ID `json:"id,omitempty"`
	// SomeString holds the value of the "some_string" field.
	SomeString string `json:"some_string,omitempty"`
	// SomeInt holds the value of the "some_int" field.
	SomeInt int `json:"some_int,omitempty"`
	// SomeFloat holds the value of the "some_float" field.
	SomeFloat float64 `json:"some_float,omitempty"`
	// SomeBool holds the value of the "some_bool" field.
	SomeBool bool `json:"some_bool,omitempty"`
	// SomeTime holds the value of the "some_time" field.
	SomeTime     time.Time `json:"some_time,omitempty"`
	selectValues sql.SelectValues
}

// scanValues returns the types for scanning values from sql.Rows.
func (*Example) scanValues(columns []string) ([]any, error) {
	values := make([]any, len(columns))
	for i := range columns {
		switch columns[i] {
		case example.FieldSomeBool:
			values[i] = new(sql.NullBool)
		case example.FieldSomeFloat:
			values[i] = new(sql.NullFloat64)
		case example.FieldSomeInt:
			values[i] = new(sql.NullInt64)
		case example.FieldSomeString:
			values[i] = new(sql.NullString)
		case example.FieldSomeTime:
			values[i] = new(sql.NullTime)
		case example.FieldID:
			values[i] = new(xid.ID)
		default:
			values[i] = new(sql.UnknownType)
		}
	}
	return values, nil
}

// assignValues assigns the values that were returned from sql.Rows (after scanning)
// to the Example fields.
func (e *Example) assignValues(columns []string, values []any) error {
	if m, n := len(values), len(columns); m < n {
		return fmt.Errorf("mismatch number of scan values: %d != %d", m, n)
	}
	for i := range columns {
		switch columns[i] {
		case example.FieldID:
			if value, ok := values[i].(*xid.ID); !ok {
				return fmt.Errorf("unexpected type %T for field id", values[i])
			} else if value != nil {
				e.ID = *value
			}
		case example.FieldSomeString:
			if value, ok := values[i].(*sql.NullString); !ok {
				return fmt.Errorf("unexpected type %T for field some_string", values[i])
			} else if value.Valid {
				e.SomeString = value.String
			}
		case example.FieldSomeInt:
			if value, ok := values[i].(*sql.NullInt64); !ok {
				return fmt.Errorf("unexpected type %T for field some_int", values[i])
			} else if value.Valid {
				e.SomeInt = int(value.Int64)
			}
		case example.FieldSomeFloat:
			if value, ok := values[i].(*sql.NullFloat64); !ok {
				return fmt.Errorf("unexpected type %T for field some_float", values[i])
			} else if value.Valid {
				e.SomeFloat = value.Float64
			}
		case example.FieldSomeBool:
			if value, ok := values[i].(*sql.NullBool); !ok {
				return fmt.Errorf("unexpected type %T for field some_bool", values[i])
			} else if value.Valid {
				e.SomeBool = value.Bool
			}
		case example.FieldSomeTime:
			if value, ok := values[i].(*sql.NullTime); !ok {
				return fmt.Errorf("unexpected type %T for field some_time", values[i])
			} else if value.Valid {
				e.SomeTime = value.Time
			}
		default:
			e.selectValues.Set(columns[i], values[i])
		}
	}
	return nil
}

// Value returns the ent.Value that was dynamically selected and assigned to the Example.
// This includes values selected through modifiers, order, etc.
func (e *Example) Value(name string) (ent.Value, error) {
	return e.selectValues.Get(name)
}

// Update returns a builder for updating this Example.
// Note that you need to call Example.Unwrap() before calling this method if this Example
// was returned from a transaction, and the transaction was committed or rolled back.
func (e *Example) Update() *ExampleUpdateOne {
	return NewExampleClient(e.config).UpdateOne(e)
}

// Unwrap unwraps the Example entity that was returned from a transaction after it was closed,
// so that all future queries will be executed through the driver which created the transaction.
func (e *Example) Unwrap() *Example {
	_tx, ok := e.config.driver.(*txDriver)
	if !ok {
		panic("dbexample: Example is not a transactional entity")
	}
	e.config.driver = _tx.drv
	return e
}

// String implements the fmt.Stringer.
func (e *Example) String() string {
	var builder strings.Builder
	builder.WriteString("Example(")
	builder.WriteString(fmt.Sprintf("id=%v, ", e.ID))
	builder.WriteString("some_string=")
	builder.WriteString(e.SomeString)
	builder.WriteString(", ")
	builder.WriteString("some_int=")
	builder.WriteString(fmt.Sprintf("%v", e.SomeInt))
	builder.WriteString(", ")
	builder.WriteString("some_float=")
	builder.WriteString(fmt.Sprintf("%v", e.SomeFloat))
	builder.WriteString(", ")
	builder.WriteString("some_bool=")
	builder.WriteString(fmt.Sprintf("%v", e.SomeBool))
	builder.WriteString(", ")
	builder.WriteString("some_time=")
	builder.WriteString(e.SomeTime.Format(time.ANSIC))
	builder.WriteByte(')')
	return builder.String()
}

// Examples is a parsable slice of Example.
type Examples []*Example
