// Code generated by ent, DO NOT EDIT.

package example

import (
	"entgo.io/ent/dialect/sql"
	"github.com/rs/xid"
)

const (
	// Label holds the string label denoting the example type in the database.
	Label = "example"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSomeString holds the string denoting the some_string field in the database.
	FieldSomeString = "some_string"
	// FieldSomeInt holds the string denoting the some_int field in the database.
	FieldSomeInt = "some_int"
	// FieldSomeFloat holds the string denoting the some_float field in the database.
	FieldSomeFloat = "some_float"
	// FieldSomeBool holds the string denoting the some_bool field in the database.
	FieldSomeBool = "some_bool"
	// FieldSomeTime holds the string denoting the some_time field in the database.
	FieldSomeTime = "some_time"
	// Table holds the table name of the example in the database.
	Table = "examples"
)

// Columns holds all SQL columns for example fields.
var Columns = []string{
	FieldID,
	FieldSomeString,
	FieldSomeInt,
	FieldSomeFloat,
	FieldSomeBool,
	FieldSomeTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSomeString holds the default value on creation for the "some_string" field.
	DefaultSomeString string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() xid.ID
)

// OrderOption defines the ordering options for the Example queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySomeString orders the results by the some_string field.
func BySomeString(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSomeString, opts...).ToFunc()
}

// BySomeInt orders the results by the some_int field.
func BySomeInt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSomeInt, opts...).ToFunc()
}

// BySomeFloat orders the results by the some_float field.
func BySomeFloat(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSomeFloat, opts...).ToFunc()
}

// BySomeBool orders the results by the some_bool field.
func BySomeBool(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSomeBool, opts...).ToFunc()
}

// BySomeTime orders the results by the some_time field.
func BySomeTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSomeTime, opts...).ToFunc()
}
